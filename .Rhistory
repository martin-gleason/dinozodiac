summarize(mean = mean(count),
min = min(count),
max = max(count),
mean_char = mean(char_count),
min_char = min(char_count),
max_char = max(char_count))
averages
scopes_corpus
x <- min_target/averages$mean_char
x
hscope_number <- min_target/averages$mean_char
per_sign <- hscope_number * 12
hscope_number
per_sign
print(sprintf("Corpus length: %d", length(scopes_corpus)))
averages
recommended = 1000000
hscope_number <- min_target/averages$mean_char
hscope_number
min_target = 100000
recommended = 1000000
ideal = 2000000
length(scopes_corpus)/min_target
hscope_number <- min_target/averages$mean_char
hscope_number
per_sign <- hscope_number * 12
per_sign
100000/averages$mean_char
24 * 9
225-108
117/24
50 *24 *444
90 *24 *444
(90 *24 *444) + 48083
(180 *24 *444) + 48083
60 * 444
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes
source('~/Local Dev Projects/dinozodiac/scripts/db_work.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/db_work.R', echo=TRUE)
nrow(scopes)
nrow(all_scopes)
source('~/Local Dev Projects/dinozodiac/scripts/tidytextmodel.R', echo=TRUE)
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9])"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+])"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),])"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),])|[!*\\(\\),]"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+])+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9])+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+])+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]/)"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]/)+"
sources$url %>% str_extract(url_site) %>% unique()
][*+]/)+"
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9][*+]/)+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9](/))+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|(/))+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|(/))"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|/[^/]+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[^/])+"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[^/])"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]+[^/])"
sources$url %>% str_extract(url_site) %>% unique()
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+][^/])"
sources$url %>% str_extract(url_site) %>% unique()
url_site <- "^(([^:/?#]+):)?(//([^/?#]*))?"
sources$url %>% str_extract(url_site) %>% unique()
test <- "ftp://losear.com"
test %>% str_extract(url_site)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
astrology_com <- bulk_read(files)
sources <- url %>%
tibble(url = . %>% str_extract(url_site),
id = seq(1:url_id)) %>%
select(id, url)
sources <- url %>%
tibble(url = .,
id = seq(1:url_id)) %>%
select(id, url)
sources
sources$url %>% str_extract(url_site)
sources$url %>% str_extract(url_site) %>% unique()
url <- all_scopes$source %>%
str_extract(url_site) %>%
unique()
url <- all_scopes$sources %>%
str_extract(url_site) %>%
unique()
astrology_com <- bulk_read(files)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
sources
all_scopes
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
sources <- url %>%
sources
sources <- url %>%
tibble(url = .,
id = seq(1:url_id)) %>%
select(id, url)
sources
dbWriteTable(con, "sources", sources[,2], overwrite = TRUE)
dz <- config::get(file = 'connections/dinozodiac.yml')
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
dbWriteTable(con, "sources", sources[,2], overwrite = TRUE)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(id, url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(id, url)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
sources
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(id, url)
url <- all_scopes$source %>%
str_extract(url_site) %>%
unique()
url_id <- length(url)
url
url_id
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id))
sources
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
sources
dbWriteTable(con, "sources", sources[,2], overwrite = TRUE)
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
dz <- config::get(file = 'connections/dinozodiac.yml')
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
dbWriteTable(con, "signs", matched_signs[, 2:3], overwrite = TRUE)
dbWriteTable(con, "sources", sources[,2], overwrite = TRUE)
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
dbWriteTable(con, "signs", matched_signs, overwrite = TRUE)
dbWriteTable(con, "sources", sources, overwrite = TRUE)
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
#cleaning and saving to df
library(tidyverse)
library(here)
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
date_pattern <- "(?<=<span class=date>)(.*?)(?=:)"
paragraph_pattern <- "(?<=<p>)(.*?)(?=</p>)"
strong_date_pattern <- "(?<=<strong>)(.*?)(?=</strong>)"
sign_header <- "(?<=<h1>)(.*?)(?=</.*?>)"
h_scope <- "Horoscope"
url_site <- "^(([^:/?#]+):)?(//([^/?#]*))?"
#create list of files function
data_files <- function(dir = "astrohistory", filename, sep = "/"){
fp <- paste0(dir, sep, filename)
list_of_files <- lapply(Sys.glob(fp), read.delim)
return(list_of_files)
}
files <- data_files("astrohistory", "astrologyCom*.txt")
bulk_read <- function(files = files){
source <- files %>%
str_extract_all(pattern = url_pattern) %>%
unlist()
date <- files %>%
str_extract_all(date_pattern) %>%
unlist() %>%
as.Date.character("%b %d, %Y")
scope <- files %>%
str_extract_all(paragraph_pattern) %>%
unlist() %>%
str_remove("<span class=date>(.*?)</span>") %>%
str_trim() %>%
na.omit()
sign <- basename(source) %>%
str_remove(".html") %>%
str_to_title()
df <- tibble(source, date, scope, sign)
return(df)
}
astrology_com <- bulk_read(files)
## horoscope.com
dat <- data_files("astrohistory", "horor*.txt")
hscope <- function(files){
scope <- files %>%
str_extract_all(paragraph_pattern) %>%
unlist() %>%
na.omit()
source <- files %>%
str_extract_all(url_pattern) %>%
unlist() %>%
na.omit()
date <- scope %>%
str_extract_all(strong_date_pattern) %>%
unlist() %>%
as.Date.character("%b %d, %Y") %>%
na.omit()
sign <- files %>%
str_extract_all(sign_header) %>%
unlist() %>%
str_remove(h_scope) %>%
str_trim() %>%
na.omit()
scope <- scope %>%
str_remove_all(strong_date_pattern) %>%
str_remove("<strong>") %>%
str_remove("</strong>") %>%
str_remove(" - ")
df <- tibble(source, date, scope, sign)
return(df)
}
hororscope_com <- dat %>% hscope()
all_scopes <- hororscope_com %>% bind_rows(astrology_com)
signs_cleaned <- all_scopes$sign %>% unique()
dino_signs <- c("Pterodactylus", "Stegosaurus", "Triceratops",
"Ankylosaurus", "Tyrannosaurus Rex", "Velociraptor",
"Spinosaurus", "Quetzalcatlus", "Mosasaurus",
"Allosaurus","Rhamphorhynchus", "Brontosaurus")
dino_signs[4:5]
matched_signs <- tibble(signs_cleaned, dino_signs) %>%
mutate(sign_id = 1:nrow(.)) %>%
select(sign_id, greekname = signs_cleaned, dinoname = dino_signs)
matched_signs %>% select(sign_id)
url <- all_scopes$source %>%
str_extract(url_site) %>%
unique()
url_id <- length(url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
eval_select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname"))
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url"))
sources
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url"))
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
sources
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
#left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname"))
(sourceid, url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url"))
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url"))
all_scopes %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes
sources
all_scopes
all_scopes %>%
select(sourceid = id, sign_id = signid, date, horoscope = scope)
?sselect
?seledt
?select
all_scopes %>%
select(sourceid = id)
all_scopes
all_scopes %>%
select(id = sourceid)
all_scopes
#cleaning and saving to df
library(tidyverse)
library(here)
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
date_pattern <- "(?<=<span class=date>)(.*?)(?=:)"
paragraph_pattern <- "(?<=<p>)(.*?)(?=</p>)"
strong_date_pattern <- "(?<=<strong>)(.*?)(?=</strong>)"
sign_header <- "(?<=<h1>)(.*?)(?=</.*?>)"
h_scope <- "Horoscope"
url_site <- "^(([^:/?#]+):)?(//([^/?#]*))?"
#create list of files function
data_files <- function(dir = "astrohistory", filename, sep = "/"){
fp <- paste0(dir, sep, filename)
list_of_files <- lapply(Sys.glob(fp), read.delim)
return(list_of_files)
}
files <- data_files("astrohistory", "astrologyCom*.txt")
bulk_read <- function(files = files){
source <- files %>%
str_extract_all(pattern = url_pattern) %>%
unlist()
date <- files %>%
str_extract_all(date_pattern) %>%
unlist() %>%
as.Date.character("%b %d, %Y")
scope <- files %>%
str_extract_all(paragraph_pattern) %>%
unlist() %>%
str_remove("<span class=date>(.*?)</span>") %>%
str_trim() %>%
na.omit()
sign <- basename(source) %>%
str_remove(".html") %>%
str_to_title()
df <- tibble(source, date, scope, sign)
return(df)
}
astrology_com <- bulk_read(files)
## horoscope.com
dat <- data_files("astrohistory", "horor*.txt")
hscope <- function(files){
scope <- files %>%
str_extract_all(paragraph_pattern) %>%
unlist() %>%
na.omit()
source <- files %>%
str_extract_all(url_pattern) %>%
unlist() %>%
na.omit()
date <- scope %>%
str_extract_all(strong_date_pattern) %>%
unlist() %>%
as.Date.character("%b %d, %Y") %>%
na.omit()
sign <- files %>%
str_extract_all(sign_header) %>%
unlist() %>%
str_remove(h_scope) %>%
str_trim() %>%
na.omit()
scope <- scope %>%
str_remove_all(strong_date_pattern) %>%
str_remove("<strong>") %>%
str_remove("</strong>") %>%
str_remove(" - ")
df <- tibble(source, date, scope, sign)
return(df)
}
hororscope_com <- dat %>% hscope()
all_scopes <- hororscope_com %>% bind_rows(astrology_com)
signs_cleaned <- all_scopes$sign %>% unique()
dino_signs <- c("Pterodactylus", "Stegosaurus", "Triceratops",
"Ankylosaurus", "Tyrannosaurus Rex", "Velociraptor",
"Spinosaurus", "Quetzalcatlus", "Mosasaurus",
"Allosaurus","Rhamphorhynchus", "Brontosaurus")
dino_signs[4:5]
matched_signs <- tibble(signs_cleaned, dino_signs) %>%
mutate(sign_id = 1:nrow(.)) %>%
select(sign_id, greekname = signs_cleaned, dinoname = dino_signs)
matched_signs %>% select(sign_id)
url <- all_scopes$source %>%
str_extract(url_pattern) %>%
unique()
url_id <- length(url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
sources
url <- all_scopes$source %>%
str_extract(url_site) %>%
unique()
url_id <- length(url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
sources
all_scopes
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname"))
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname"))
all_scopes %>%
mutate(source_site = str_extract(url_site))
all_scopes %>%
mutate(source_site = str_extract(sources, url_site))
all_scopes %>%
mutate(source_site = str_extract_all(sources, url_site))
all_scopes
all_scopes %>%
mutate(source_site = str_extract_all(source, url_site))
(source_site)
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
select(source_site)
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
select(source_site) %>%
left_join(sources, by = c("source_site" = "url"))
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
select(source_site) %>%
left_join(sources, by = c("source_site" = "url"))
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url"))
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
select(sourceid, date, horoscope = scope, signid = sign_id)
all_scopes <- all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
select(sourceid, date, horoscope = scope, signid = sign_id)
dz <- config::get(file = 'connections/dinozodiac.yml')
#database
library(tidyverse)
library(config)
library(odbc)
library(DBI)
library(here)
dz <- config::get(file = 'connections/dinozodiac.yml')
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
dbWriteTable(con, "signs", matched_signs, overwrite = TRUE)
dbWriteTable(con, "sources", sources, overwrite = TRUE)
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/tidytextmodel.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/db_work.R', echo=TRUE)
#QA
today <- all_scopes %>%
filter(date == lubridate::today())
today
