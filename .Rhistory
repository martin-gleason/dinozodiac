df <- tibble(source, date, scope, sign)
return(df)
}
astrology_com <- bulk_read(files)
## horoscope.com
dat <- data_files("astrohistory", "horor*.txt")
hscope <- function(files){
scope <- files %>%
str_extract_all(paragraph_pattern) %>%
unlist() %>%
na.omit()
source <- files %>%
str_extract_all(url_pattern) %>%
unlist() %>%
na.omit()
date <- scope %>%
str_extract_all(strong_date_pattern) %>%
unlist() %>%
as.Date.character("%b %d, %Y") %>%
na.omit()
sign <- files %>%
str_extract_all(sign_header) %>%
unlist() %>%
str_remove(h_scope) %>%
str_trim() %>%
na.omit()
scope <- scope %>%
str_remove_all(strong_date_pattern) %>%
str_remove("<strong>") %>%
str_remove("</strong>") %>%
str_remove(" - ")
df <- tibble(source, date, scope, sign)
return(df)
}
hororscope_com <- dat %>% hscope()
all_scopes <- hororscope_com %>% bind_rows(astrology_com)
signs_cleaned <- all_scopes$sign %>% unique()
dino_signs <- c("Pterodactylus", "Stegosaurus", "Triceratops",
"Ankylosaurus", "Tyrannosaurus Rex", "Velociraptor",
"Spinosaurus", "Quetzalcatlus", "Mosasaurus",
"Allosaurus","Rhamphorhynchus", "Brontosaurus")
dino_signs[4:5]
matched_signs <- tibble(signs_cleaned, dino_signs) %>%
mutate(sign_id = 1:nrow(.)) %>%
select(sign_id, greekname = signs_cleaned, dinoname = dino_signs)
matched_signs %>% select(sign_id)
url <- all_scopes$source %>%
str_extract(url_site) %>%
unique()
url_id <- length(url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
eval_select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname"))
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url"))
sources
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url"))
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
sources
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
#left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname"))
(sourceid, url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url")) %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url"))
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname")) %>%
left_join(sources, by = c("source" = "url"))
all_scopes %>%
select(sourceid = id, signid = sign_id, date, horoscope = scope)
all_scopes
sources
all_scopes
all_scopes %>%
select(sourceid = id, sign_id = signid, date, horoscope = scope)
?sselect
?seledt
?select
all_scopes %>%
select(sourceid = id)
all_scopes
all_scopes %>%
select(id = sourceid)
all_scopes
#cleaning and saving to df
library(tidyverse)
library(here)
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
date_pattern <- "(?<=<span class=date>)(.*?)(?=:)"
paragraph_pattern <- "(?<=<p>)(.*?)(?=</p>)"
strong_date_pattern <- "(?<=<strong>)(.*?)(?=</strong>)"
sign_header <- "(?<=<h1>)(.*?)(?=</.*?>)"
h_scope <- "Horoscope"
url_site <- "^(([^:/?#]+):)?(//([^/?#]*))?"
#create list of files function
data_files <- function(dir = "astrohistory", filename, sep = "/"){
fp <- paste0(dir, sep, filename)
list_of_files <- lapply(Sys.glob(fp), read.delim)
return(list_of_files)
}
files <- data_files("astrohistory", "astrologyCom*.txt")
bulk_read <- function(files = files){
source <- files %>%
str_extract_all(pattern = url_pattern) %>%
unlist()
date <- files %>%
str_extract_all(date_pattern) %>%
unlist() %>%
as.Date.character("%b %d, %Y")
scope <- files %>%
str_extract_all(paragraph_pattern) %>%
unlist() %>%
str_remove("<span class=date>(.*?)</span>") %>%
str_trim() %>%
na.omit()
sign <- basename(source) %>%
str_remove(".html") %>%
str_to_title()
df <- tibble(source, date, scope, sign)
return(df)
}
astrology_com <- bulk_read(files)
## horoscope.com
dat <- data_files("astrohistory", "horor*.txt")
hscope <- function(files){
scope <- files %>%
str_extract_all(paragraph_pattern) %>%
unlist() %>%
na.omit()
source <- files %>%
str_extract_all(url_pattern) %>%
unlist() %>%
na.omit()
date <- scope %>%
str_extract_all(strong_date_pattern) %>%
unlist() %>%
as.Date.character("%b %d, %Y") %>%
na.omit()
sign <- files %>%
str_extract_all(sign_header) %>%
unlist() %>%
str_remove(h_scope) %>%
str_trim() %>%
na.omit()
scope <- scope %>%
str_remove_all(strong_date_pattern) %>%
str_remove("<strong>") %>%
str_remove("</strong>") %>%
str_remove(" - ")
df <- tibble(source, date, scope, sign)
return(df)
}
hororscope_com <- dat %>% hscope()
all_scopes <- hororscope_com %>% bind_rows(astrology_com)
signs_cleaned <- all_scopes$sign %>% unique()
dino_signs <- c("Pterodactylus", "Stegosaurus", "Triceratops",
"Ankylosaurus", "Tyrannosaurus Rex", "Velociraptor",
"Spinosaurus", "Quetzalcatlus", "Mosasaurus",
"Allosaurus","Rhamphorhynchus", "Brontosaurus")
dino_signs[4:5]
matched_signs <- tibble(signs_cleaned, dino_signs) %>%
mutate(sign_id = 1:nrow(.)) %>%
select(sign_id, greekname = signs_cleaned, dinoname = dino_signs)
matched_signs %>% select(sign_id)
url <- all_scopes$source %>%
str_extract(url_pattern) %>%
unique()
url_id <- length(url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
sources
url <- all_scopes$source %>%
str_extract(url_site) %>%
unique()
url_id <- length(url)
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(sourceid, url)
sources
all_scopes
all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname"))
all_scopes <- all_scopes %>%
left_join(matched_signs, by = c("sign" = "greekname"))
all_scopes %>%
mutate(source_site = str_extract(url_site))
all_scopes %>%
mutate(source_site = str_extract(sources, url_site))
all_scopes %>%
mutate(source_site = str_extract_all(sources, url_site))
all_scopes
all_scopes %>%
mutate(source_site = str_extract_all(source, url_site))
(source_site)
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
select(source_site)
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
select(source_site) %>%
left_join(sources, by = c("source_site" = "url"))
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
select(source_site) %>%
left_join(sources, by = c("source_site" = "url"))
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url"))
all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
select(sourceid, date, horoscope = scope, signid = sign_id)
all_scopes <- all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
select(sourceid, date, horoscope = scope, signid = sign_id)
dz <- config::get(file = 'connections/dinozodiac.yml')
#database
library(tidyverse)
library(config)
library(odbc)
library(DBI)
library(here)
dz <- config::get(file = 'connections/dinozodiac.yml')
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
dbWriteTable(con, "signs", matched_signs, overwrite = TRUE)
dbWriteTable(con, "sources", sources, overwrite = TRUE)
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/tidytextmodel.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/db_work.R', echo=TRUE)
#QA
today <- all_scopes %>%
filter(date == lubridate::today())
today
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes
?DBi
?DBI
all_scopes
test_scopes <- all_scopes %>%
mutate(scope_id = 1:nrow(scopes))
test_scopes <- all_scopes %>%
mutate(scope_id = 1:nrow(.))
test_scopes
test_scopes <- all_scopes %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, sourceid, date, horoscope, signid)
dbWriteTable(con, "scopes", test_scopes, overwrite = TRUE)
#database
library(tidyverse)
library(config)
library(odbc)
library(DBI)
library(here)
dz <- config::get(file = 'connections/dinozodiac.yml')
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
dbWriteTable(con, "scopes", test_scopes, overwrite = TRUE)
test_scopes <- all_scopes %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source = source_id, date, horoscope, sign = sign_id)
all_scopes
test_scopes <- all_scopes %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, sourceid = source_id, date, horoscope, sign = sign_id)
test_scopes <- all_scopes %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source_id = sourceid, date, horoscope, sign_id =sign_id)
test_scopes <- all_scopes %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source_id = sourceid, date, horoscope, signid = sign_id)
test_scopes <- all_scopes %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source_id = sourceid, date, horoscope, sign_id = signid)
test_scopes
dbWriteTable(con, "scopes", test_scopes, overwrite = TRUE)
dbWriteTable(con, "sources", sources, overwrite = TRUE)
all_scopes <- all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source_id = sourceid, date, horoscope, sign_id = signid)
all_scopes <- all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source_id = sourceid, date, horoscope, sign_id = signid)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes
all_scopes <- all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source_id = sourceid, date, scope, sign_id)
all_scopes
number <- dbGetQuery(con, "SELECT MAX(scope_id) FROM scopes;")
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
dz <- config::get(file = 'connections/dinozodiac.yml')
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
dbWriteTable(con, "signs", matched_signs, overwrite = TRUE)
number <- dbGetQuery(con, "SELECT MAX(scope_id) FROM scopes;")
number
create_sequence <- paste0("CREATE SEQUENCE scope_range MINVALUE", number, ";")
create_sequence
create_sequence <- paste0("CREATE SEQUENCE scope_range MINVALUE ", number, ";")
create_sequence
create_sequence <- paste0("CREATE SEQUENCE scope_range MINVALUE ", number+1, ";")
create_sequence
dbSendQuery(con, create_sequence)
dbSendQuery(con, create_sequence)
dbSendQuery(con, "DROP SEQUENCE scope_range;")
create_sequence <- paste0("CREATE SEQUENCE test MINVALUE ", number+1, ";")
dbSendQuery(con, create_sequence)
dbWriteTable(con, "scopes", test_scopes, overwrite = TRUE)
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
dbSendQuery(con, create_sequence)
number <- dbGetQuery(con, "SELECT MAX(scope_id) FROM scopes;")
number <- dbGetQuery(con, "SELECT MAX(scope_id) FROM scopes;")
create_sequence <- paste0("CREATE SEQUENCE test MINVALUE ", number+1, ";")
create_sequence <- paste0("CREATE SEQUENCE test MINVALUE ", number+1, ";")
dbSendQuery(con, create_sequence)
create_sequence <- paste0("CREATE SEQUENCE scope_range MINVALUE ", number+1, ";")
dbSendQuery(con, create_sequence)
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
number <- dbGetQuery(con, "SELECT MAX(scope_id) FROM scopes;")
create_sequence <- paste0("CREATE SEQUENCE scope_range MINVALUE ", number+1, ";")
dbSendQuery(con, c(create_sequence, set_new_default, set_seq_owner))
#CREATE SEQUENCE scope_range  MINVALUE 181;
set_new_default <- "ALTER TABLE scopes ALTER scopes_id SET DEFAULT nextval('scope_range');"
set_seq_owner <- "ALTER SEQUENCE scope_range OWNED BY scopes.scope_id;"
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
number <- dbGetQuery(con, "SELECT MAX(scope_id) FROM scopes;")
create_sequence <- paste0("CREATE SEQUENCE scope_range MINVALUE ", number+1, ";")
dbSendQuery(con, c(create_sequence, set_new_default, set_seq_owner))
dbSendQuery()
?dbSendQuery
dbSendQuery(con, create_sequence)
dbSendQuery(con,set_new_default)
dbSendQuery(con,set_seq_owner)
all_scopes
set_seq_owner <- "ALTER SEQUENCE scope_range OWNED BY scope.scope_id;"
dbSendQuery(con,set_new_default)
#CREATE SEQUENCE scope_range  MINVALUE 181;
set_new_default <- "ALTER TABLE scope ALTER scope_id SET DEFAULT nextval('scope_range');"
set_seq_owner <- "ALTER SEQUENCE scope_range OWNED BY scope.scope_id;"
dbSendQuery(con,set_new_default)
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
#CREATE SEQUENCE scope_range  MINVALUE 181;
set_new_default <- "ALTER TABLE scopes ALTER scope_id SET DEFAULT nextval('scope_range');"
set_seq_owner <- "ALTER SEQUENCE scope_range OWNED BY scopes.scope_id;"
dbSendQuery(con,set_new_default)
dbSendQuery(con, create_sequence)
dbSendQuery(con,set_new_default)
dbSendQuery(con,set_seq_owner)
dbDisconnect(con)
matched_signs
sources
sources
sources <- url %>%
tibble(url = .,
sourceid = seq(1:url_id)) %>%
select(source_id = sourceid, url)
all_scopes <- all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source_id, date, scope, sign_id)
all_scopes <- all_scopes %>%
mutate(source_site = str_extract(source, url_site)) %>%
left_join(sources, by = c("source_site" = "url")) %>%
mutate(scope_id = 1:nrow(.)) %>%
select(scope_id, source_id, date, scope, sign_id)
all_scopes %>%
mutate(source_site = str_extract(source, url_site))
all_scopes
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
all_scopes
sources
set_new_default <- "ALTER TABLE sources ALTER source_id SET DEFAULT nextval('source_range');"
create_source_sequence <- paste0("CREATE SEQUENCE source_range MINVALUE ", max_source_number+1, ";")
max_source_number <- dbGetQuery(con, "SELECT MAX(source_id) FROM sources;")
max_source_number <- dbGetQuery(con, "SELECT MAX(source_id) FROM sources;")
dz <- config::get(file = 'connections/dinozodiac.yml')
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
max_source_number <- dbGetQuery(con, "SELECT MAX(source_id) FROM sources;")
dbWriteTable(con, "sources", sources, overwrite = TRUE)
max_source_number <- dbGetQuery(con, "SELECT MAX(source_id) FROM sources;")
set_source_seq_owner <- "ALTER SEQUENCE source_range OWNED BY sources.source_id;"
create_source_sequence <- paste0("CREATE SEQUENCE source_range MINVALUE ", max_source_number+1, ";")
set_new_source_default <- "ALTER TABLE sources ALTER source_id SET DEFAULT nextval('source_range');"
set_source_seq_owner <- "ALTER SEQUENCE source_range OWNED BY sources.source_id;"
dbSendQuery(con, create_source_sequence)
dbSendQuery(con, set_new_source_defaul)
dbSendQuery(con, set_new_source_default)
dbSendQuery(con, set_source_seq_owner)
dbWriteTable(con, "scopes", all_scopes, overwrite = TRUE)
#alter column to serial
number <- dbGetQuery(con, "SELECT MAX(scope_id) FROM scopes;")
create_sequence <- paste0("CREATE SEQUENCE scope_range MINVALUE ", number+1, ";")
set_new_default <- "ALTER TABLE scopes ALTER scope_id SET DEFAULT nextval('scope_range');"
set_seq_owner <- "ALTER SEQUENCE scope_range OWNED BY scopes.scope_id;"
dbSendQuery(con, create_sequence)
dbSendQuery(con,set_new_default)
dbSendQuery(con,set_seq_owner)
dbDisconnect(con)
max_source_number <- dbGetQuery(con, "SELECT MAX(source_id) FROM sources;")
dbWriteTable(con, "signs", matched_signs, overwrite = TRUE)
dz <- config::get(file = 'connections/dinozodiac.yml')
con <- DBI::dbConnect(odbc::odbc(),
Driver = dz$dinozodiac$driver,
Servere = dz$dinozodiac$server,
UID = dz$dinozodiac$uid,
PWD = dz$dinozodiac$pwd,
Port = dz$dinozodiac$port,
Database = dz$dinozodiac$database
)
max_source_number <- dbGetQuery(con, "SELECT MAX(source_id) FROM sources;")
max_source_number
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/db_work.R', echo=TRUE)
install.packages(c("callr", "devtools", "digest", "lattice", "plotly", "ps", "RcppArmadillo", "remotes", "stringi", "vctrs"))
source('~/Local Dev Projects/dinozodiac/scripts/tidytextmodel.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/cleaning_db_prep.R', echo=TRUE)
source('~/Local Dev Projects/dinozodiac/scripts/db_work.R', echo=TRUE)
